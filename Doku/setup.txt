Virtual Environment
-------------------
$ cd Bullinger
Python 3.4+:    $ python -m venv venv
Python <3.4     $ virtualenv venv
Mac/Linux:      $ source venv/bin/activate
Windows         $ venv\Scripts\activate

Flask
-----
(venv) $ pip install flask
(venv) $ pip install flask-wtf
(venv) $ pip install flask-sqlalchemy
(venv) $ pip install flask_migrate
(venv) $ pip install flask-login
(venv) $ pip install flask_admin

Database
--------
(venv) $ flask db init
(venv) $ flask db migrate -m "init"
(venv) $ flask db upgrade

Execution (locally)
-------------------
source venv/bin/activate
(venv) $ export FLASK_APP=App.py
(venv) $ export FLASK_ENV=development
(venv) $ FLASK_DEBUG=1
(venv) $ flask run

Kraken (http://kraken.re/)
--------------------------
$ pip3 install kraken
$ kraken get 10.5281/zenodo.2577813  # language model EN, "en_best.mlmodel" --> doesn't work (has been migrated

GitHub
------
git status
git add -A
git commit -m "description of the changes"
git push origin master

Pull anyway
$ git fetch --all
$ git reset --hard origin/master

Server
------
$ ssh ubuntu@130.60.24.72
$ pkill gunicorn
$ sudo systemctl stop nginx
$ sudo supervisorctl stop all
$ sudo service supervisor reload
$ sudo service nginx restart
$ gunicorn -w 33 App:app


Tutorials (YouTube)
-------------------
- introduction to git concepts (3 parts, ca. 90min)
- Python flask tutorial: deploying your application (option 1) - deploy to a linux server


DEPLOYMENT (Linux-Ubuntu)
=========================

Server
$ ssh ubuntu@130.60.24.72

Modules (check locally)
$ pip freeze > requirements.txt
$ scp -r local/dir/to/project ubuntu@130.60.24.72
$ sudo apt install python3-pip
$ sudo apt install python3-venv

Virtual Environment (Flask Project)
$ python3 -m venv Project/venv
$ source venv/bin/activate

Project Packages
(venv) $ pip install -r requirements.txt

nginx/gunicorn (scalability)
(venv) $ sudo apt install nginx
(venv) $ pip install gunicorn

supervisor
(venv) $ sudo apt install supervisor

config file:
$ sudo nano /etc/supervisor/conf.f/bullinger.conf
    ...

$ sudo supervisorctl reload
$ sudo systemctl restart nginx

RESTART

$ sudo systemctl restart nginx      OR          sudo service nginx restart
$ sudo systemctl stop nginx
$ sudo supervisorctl stop all
$ sudo service supervisor restart
$ sudo service nginx restart
$ sudo service supervisor reload
$ sudo supervisorctl reload
$ gunicorn -w 33 App:app
pkill gunicorn
